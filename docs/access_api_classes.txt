@startuml
class srm_reg_array << template >>
class srm_reg << template >>
class srm_field << template >>
abstract class srm_base_field
abstract class srm_base_reg

class srm_component {
  -_children[]
  -_offset_table[string]
  load()
  store()
  store_update()
}

class srm_base_reg {
  -_fields[]
  get_bytes()
  set_bytes()
  load()
  store()
  -__write_bytes()
  -__read_bytes()
}

class srm_reg {
  T get()
  set(T)
  read(T)
  write(T)
}

class srm_reg_array {
  -_entries[]
  -_prototype
  -_num_entries
  entry_at()
}

class srm_array_entry {
  -_index
  get_offset(addr_map_name)
}

class srm_base_field {
  #get_bytes()
  #set_bytes()
}

class srm_field {
  get_bytes()
  set_bytes()
  set(T)
  T get() 
  read(T)
  write(T)
}

srm_component <|-- srm_reg_array
srm_component <|-- srm_base_reg
srm_base_reg <|-- srm_reg
srm_component "1" *-- "many" srm_component : contains
srm_base_reg "1" *-- "many" srm_base_field : contains
srm_reg <|-- srm_array_entry
srm_base_field <|-- srm_field
srm_reg_array --> "prototype" srm_array_entry
@enduml
