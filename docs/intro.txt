Title: Introduction

The "Simple Register Model" is an open source (MIT license), clean slate system verilog framework for generating registers and memories in verilog design. It is designed to be used in uvm test benches instead of the default uvm_reg package.

Like uvm_reg, srm package defines several base classes that when properly extended, abstract the read/write operations to registers and memories in the design under verification. It integrates into the uvm testbench using "adapters" that convert generic transaction to bus specific transactions. For passive testbenches it uses "predictors" to convert the bus transactions to generic transactions that update the model.

A register model is typically composed of a hierarchy of blocks that usually map to the design hierarchy. Blocks physically contain registers, register files and memories. These are mapped on to the software address map as registers or register arrays (a.k.a tables). SRM provides the base classes for this abstraction, which have the generic and introspection capibilites. Theses are specialized by extension to create the abstract view that correspond to the actual register and register arrays.

Due to the large number of registers in a design and the numerous small details involved in properly configuring the SRM register slasses, this specialization is done by a model generator. SRM provides a  model generator that given a specification, will generate up-to-date and correct by construction reigster model. [TBD]

