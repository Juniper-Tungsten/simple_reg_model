#!/bin/csh -f

#-------------------------------------------------------------------------------
# This script runs Naturals Docs to generate the UVM Reference Documentation
# from comments embedded in the UVM source.
#
# Before running NaturalDocs, this script will remove any existing html output
# directory, which is fixed at $UVM_HOME/distrib/docs/html. It then copies the UVM logo,
# banner, other gifs from the $ND source dir to the outdir. NaturalDocs will not
# do this for us, as we've customized the page layout.
#
# Next, the script runs NaturalDocs proper, which requires that perl be in your
# search PATH. The command line uses the following options: 
#
# -do  - include only source files that contain documentation
#
# -ro  - rebuild the output from scratch each time (this actually isn't needed
#        since we delete any previously existing output before running
#
# -i   - sets the input directories from which to gather documentation,
#        $UVM_HOME/distrib/src and $UVM_HOME/srm_ref. The latter directory
#        contains various overview text files.
#
# -img - sets the directories from which to find the images referenced in the
#        source documentation: (see <filename>.gif). We have one such input
#        directory, ./Images
#
# -p   - sets the project directory into which the Menu.txt, Languages.txt,
#        and Topics.txt files are written. Only the Menu.txt is of interest.
#
# -o   - sets the output directory into which self-contained HTML documentation
#        is written. We choose to use the FramedHTML option so the menu is
#        always present on the left hand side of the browser window.
#
# To learn more on these and other NatualDocs options, type 'perl NaturalDocs -h'
# You can also visit naturaldocs.org.
#
# NaturalDocs will finish with an error if the Proj/* files are not writable.
# That's OK if you have not added any source files with documentation and only
# want to regenerate the HTML.
#
# If you have added source files with documentation, you will need to 'check out'
# the Proj/Menu.txt file so that NaturalDocs can update it with initial entries
# for each added file. You then edit the Menu.txt to move the entries to the
# desired location in the menu. You should always "lock-in" the name of each
# menu item by adding the 'no auto-title' option as shown in all current entries
# in Menu.txt.
#
#
#-------------------------------------------------------------------------------

set nd_dir = ../../natural_docs
set outdir = ../../distrib/docs/html
set srm_root = `pwd | sed "s?/srm_ref/nd??"`

echo "srm_root dir is $srm_root"
echo "Output dir is $outdir"

rm -rf $outdir

mkdir -p $outdir/images

# replace SRM_ROOT in SRM_Menu.txt with current working dir to satisfy ND
# without requiring the source-controlled Menu file to be overwritten
# can get generated where ever checkedout
rm -rf $srm_root/srm_ref/nd/Proj
mkdir -p $srm_root/srm_ref/nd/Proj

sed "s?SRM_ROOT?$srm_root?g" $srm_root/srm_ref/nd/SRM_Menu.txt > $srm_root/srm_ref/nd/Proj/Menu.txt
cp        $srm_root/srm_ref/nd/SRM_Topics.txt    $srm_root/srm_ref/nd/Proj/Topics.txt
cp        $srm_root/srm_ref/nd/SRM_Languages.txt $srm_root/srm_ref/nd/Proj/Languages.txt
chmod 666 $srm_root/srm_ref/nd/Proj/Languages.txt
chmod 666 $srm_root/srm_ref/nd/Proj/Menu.txt
chmod 666 $srm_root/srm_ref/nd/Proj/Topics.txt

cp -r $nd_dir/images/b* $outdir/images
cp    $nd_dir/logo.html $outdir

# Run ND

perl $nd_dir/NaturalDocs \
  -do \
  -ro \
  -i ../../distrib/src \
  -i .. \
  -img ./Images \
  -p ./Proj \
  -o FramedHTML $outdir

