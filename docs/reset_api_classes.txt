@startuml
class srm_reg_array << template >>
class srm_reg << template >>
class srm_field << template >>
abstract class srm_array_entry << template >>


class srm_component {
  -_children[]
  +reset(kind)
}
note left: Calls reset on all the children

class srm_reg {
  #_reset_kinds[string]
  +set_reset_kind(kind)
  +is_resettable(kind)
  +reset(kind)
}


class srm_field {
  -T _reset_values[string]
  +set_reset_value(T, kind)
  +T get_reset_value(kind)
}
note bottom: unitialized get() will return garbage value.

class srm_array_entry {
  -_index
  +clone(index)
}

class srm_reg_array {
  +is_resettable(kind)
  +reset(kind)
}
note left: Reset all the existing entries and prototype member

srm_component <|-- srm_reg_array
srm_component <|-- srm_reg
srm_component "1" *-- "many" srm_component : contains
srm_reg "1" *-- "many" srm_field : contains
srm_reg <|-- srm_array_entry
srm_reg_array --> "prototype" srm_array_entry
@enduml
